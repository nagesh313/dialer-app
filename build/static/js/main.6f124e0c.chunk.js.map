{"version":3,"sources":["redux/actionTypes.tsx","redux/actions.tsx","components/Forms/CampaignCreationSuccess.tsx","components/Forms/CreateNewCampaignForm.tsx","components/Forms/ListUpload.tsx","components/CreateCampaignStepper.tsx","components/CampaignList.tsx","routes.tsx","components/MiniDrawer.tsx","components/SnackBar.tsx","LoginComponent.tsx","redux/reducers/login.tsx","redux/reducers/snackbar.tsx","redux/reducers/theme.tsx","redux/reducers/index.tsx","redux/store.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["USER_LOGIN","SNACKBAR","THEME","setSnackBar","content","type","snackbar","useStyles","makeStyles","theme","createStyles","root","display","formControl","margin","spacing","CampaignCreationSuccess","props","classes","className","TableContainer","component","Paper","Table","size","aria-label","TableBody","TableRow","TableCell","scope","campaignData","campaignID","campaignName","targetEnv","clientID","contactFlowID","primaryQueue","waitQueue","connect","state","React","useState","loading","setLoading","error","setError","FormSchema","Yup","shape","required","createNewCampaign","values","headers","Headers","set","btoa","sessionStorage","getItem","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","then","response","ok","json","data","message","open","handleCreateNewCampaignSuccess","campaign_id","catch","severity","validationSchema","initialValues","onSubmit","submitForm","errors","handleChange","handleBlur","handleSubmit","touched","isSubmitting","isValid","setFieldValue","submitCount","noValidate","Grid","container","justify","style","padding","item","xs","textAlign","TextField","disabled","onChange","value","label","name","Boolean","Button","color","variant","CircularProgress","handleFiles","files","reader","FileReader","onload","e","lines","split","result","i","length","currentline","push","phone_number","payload","multiplier","waitTime","url","Error","handleFileUploadSuccess","submit","readAsText","fileTypes","marginBottom","activeStep","setActiveStep","setCampaignID","setCampaignData","steps","handleNext","prevActiveStep","Container","Stepper","alternativeLabel","map","Step","StepLabel","Typography","onClick","stepIndex","getStepForm","headCells","id","align","EnhancedTableHead","numSelected","rowCount","TableHead","headCell","fontWeight","COMMAND","width","paper","table","minWidth","visuallyHidden","border","clip","height","overflow","position","top","backdrop","zIndex","drawer","selected","page","setPage","rowsPerPage","setRowsPerPage","setData","useEffect","command","emptyRows","Math","min","Backdrop","aria-labelledby","row","index","isItemSelected","indexOf","labelId","role","aria-checked","tabIndex","campaign_name","flow_id","primary_queue","status","target_env","updated_at","wait_queue","IconButton","START","STOP","PAUSE","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","dashboardRoutes","path","icon","layout","drawerWidth","grow","flexGrow","sectionDesktop","breakpoints","up","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","sectionMobile","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","alignItems","justifyContent","mixins","list","fullList","profile","login","setUser","setTheme","history","useHistory","useTheme","setOpen","left","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","removeItem","window","location","reload","Drawer","direction","Divider","List","route","ListItem","button","link","ListItemIcon","ListItemText","primary","Alert","elevation","marginTop","handleClose","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","flexWrap","withoutLabel","textField","palette","text","secondary","LoginComponent","username","password","showPassword","setValues","prop","handleClickShowPassword","sm","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","FormHelperText","setItem","token","initialState","combineReducers","action","Object","assign","createStore","rootReducer","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+dAAaA,EAAa,aACbC,EAAW,WACXC,EAAQ,QCKRC,EAAc,SAACC,GAC1B,MAAO,CACLC,KAAMJ,EACNK,SAAUF,EAAQE,W,mHCShBC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXC,OAAQL,EAAMM,QAAQ,SAKb,SAASC,GAAwBC,GAAa,IAAD,cACpDC,EAAUX,IAEhB,OACE,qBAAKY,UAAWD,EAAQP,KAAxB,SACE,cAACS,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,aAAW,gBAA/B,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,wBAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBC,gBAGzB,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,0BAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBE,kBAGzB,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,wBAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBG,eAGzB,eAACN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,uBAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBI,cAGzB,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,6BAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBK,mBAGzB,eAACR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,2BAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBM,kBAGzB,eAACT,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,wBAGA,cAACD,EAAA,EAAD,CAAWP,UAAU,KAAKQ,MAAM,MAAhC,mBACGZ,EAAMa,oBADT,aACG,EAAoBO,wB,2CC2FrC,IAGeC,gBAHc,SAACC,GAC5B,OAAO,eAAKA,EAAMjC,YAEoB,CAAEH,eAA3BmC,EAlLf,SAA+BrB,GAC7B,MAA8BuB,IAAMC,UAAc,GAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,IAAMC,UAAc,GAA9C,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAaC,OAAaC,MAAM,CACpChB,aAAce,OAAaE,SAAS,YACpChB,UAAWc,OAAaE,SAAS,YACjCf,SAAUa,OAAaE,SAAS,cAK5BC,EAAoB,SAACC,GACzBR,GAAW,GACX,IACIS,EAAU,IAAIC,QAClBD,EAAQE,IAAI,mBAAoB,kBAChCF,EAAQE,IAAI,eAAgB,oBAC5BF,EAAQE,IACN,gBACA,SACEC,KACEC,eAAeC,QAAQ,YACrB,IACAD,eAAeC,QAAQ,cAI/BC,MAdU,mBAcC,CACTC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAASA,EACTW,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUhB,KAEpBiB,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM3B,OAGTwB,MAAK,SAACI,GAAe,IAAD,EACnB7B,GAAW,GACX1B,EAAMd,YAAY,CAChBG,SAAU,CAAEmE,QAAS,+BAAgCC,MAAM,KAE7DzD,EAAM0D,+BAAN,OACEH,QADF,IACEA,GADF,UACEA,EAAMH,gBADR,aACE,EAAgBO,YAChBzB,MAGH0B,OAAM,WACL5D,EAAMd,YAAY,CAChBG,SAAU,CACRmE,QAAS,oBACTC,MAAM,EACNI,SAAU,WAGdnC,GAAW,GACXE,GAAS,OAGf,OACE,mCACE,cAAC,KAAD,CACEkC,iBAAkBjC,EAClBkC,cAAe,CACbhD,aAAc,gBACdC,UAAW,MACXC,SAAU,UACVC,cAAe,GACfC,aAAc,GACdC,UAAW,IAEb4C,SAAU,SAAC9B,GAAD,OAtEG,SAACA,GAClBD,EAAkBC,GAqEQ+B,CAAW/B,IAVnC,SAYG,gBACCgC,EADD,EACCA,OAEAC,GAHD,EAECC,WAFD,EAGCD,cACAE,EAJD,EAICA,aAEAC,GAND,EAKCC,aALD,EAMCD,SACApC,EAPD,EAOCA,OAGAsC,GAVD,EAQCC,cARD,EASCC,YATD,EAUCF,SAVD,OAYC,eAAC,KAAD,CAAMG,YAAU,EAACX,SAAUK,EAA3B,UACE,eAACO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,MAAO,CAAEC,QAAS,QAAnD,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGH,MAAO,CAAEI,UAAW,UAAtC,SACE,cAACC,GAAA,EAAD,CACEC,SAAU5D,EACV6D,SAAUnB,EACVoB,MAAOrD,EAAOnB,aACdyE,MAAM,gBACNC,KAAK,eACL9D,MAAO+D,QAAQpB,EAAQvD,cAAgBmD,EAAOnD,kBAGlD,cAAC6D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGH,MAAO,CAAEI,UAAW,UAAtC,SACE,cAACC,GAAA,EAAD,CACEC,SAAU5D,EACV6D,SAAUnB,EACVoB,MAAOrD,EAAOlB,UACdwE,MAAM,aACNC,KAAK,YACL9D,MAAO+D,QAAQpB,EAAQtD,WAAakD,EAAOlD,eAG/C,cAAC4D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGH,MAAO,CAAEI,UAAW,UAAtC,SACE,cAACC,GAAA,EAAD,CACEC,SAAU5D,EACV6D,SAAUnB,EACVoB,MAAOrD,EAAOjB,SACduE,MAAM,YACNC,KAAK,WACL9D,MAAO+D,QAAQpB,EAAQrD,UAAYiD,EAAOjD,cAG9C,cAAC2D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGH,MAAO,CAAEI,UAAW,UAAtC,SACE,cAACC,GAAA,EAAD,CACEC,SAAU5D,EACV6D,SAAUnB,EACVoB,MAAOrD,EAAOhB,cACdsE,MAAM,kBACNC,KAAK,gBACL9D,MAAO+D,QAAQpB,EAAQpD,eAAiBgD,EAAOhD,mBAGnD,cAAC0D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGH,MAAO,CAAEI,UAAW,UAAtC,SACE,cAACC,GAAA,EAAD,CACEC,SAAU5D,EACV6D,SAAUnB,EACVoB,MAAOrD,EAAOf,aACdqE,MAAM,gBACNC,KAAK,eACL9D,MAAO+D,QAAQpB,EAAQnD,cAAgB+C,EAAO/C,kBAGlD,cAACyD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGH,MAAO,CAAEI,UAAW,UAAtC,SACE,cAACC,GAAA,EAAD,CACEC,SAAU5D,EACV6D,SAAUnB,EACVoB,MAAOrD,EAAOd,UACdoE,MAAM,aACNC,KAAK,YACL9D,MAAO+D,QAAQpB,EAAQlD,WAAa8C,EAAO9C,kBAIjD,cAACwD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACa,EAAA,EAAD,CACEC,MAAM,UACNP,UAAWb,GAAW/C,EACtBrC,KAAK,SACLyG,QAAQ,YAJV,SAMGpE,EACC,cAACqE,GAAA,EAAD,CAAkBF,MAAM,YAAYrF,KAAM,KAE1C,wB,qBCpDlB,IAGec,gBAHc,SAACC,GAC5B,OAAO,eAAKA,EAAMjC,YAEoB,CAAEH,eAA3BmC,EApHf,SAAoBrB,GAClB,MAA8BuB,IAAMC,UAAc,GAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,IAAMC,UAAc,GAA9C,mBAAcI,GAAd,WAsEMmE,EAAc,SAACC,GACnB,GAAIA,EAAM,GAAGzF,KAAO,KAAO,KAAO,EAChCP,EAAMd,YAAY,CAChBG,SAAU,CACRmE,QAAS,6BACTC,MAAM,EACNI,SAAU,eALhB,CAUA,IAAIoC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUC,IAhFb,SAAC7C,GACd7B,GAAW,GAIX,IAHA,IAAI2E,EAAa9C,EAAK+C,MAAM,MACxBC,EAAc,GAETC,GADaH,EAAM,GAAGC,MAAM,KACxB,GAAGE,EAAIH,EAAMI,OAAQD,IAAK,CACrC,IACIE,EAAcL,EAAMG,GAAGF,MAAM,KACjCC,EAAOI,KAAK,CAAElB,KAAMiB,EAAY,GAAIE,aAAcF,EAAY,KAEhE,IAAMG,EAAU,CACdC,WAAY,EACZC,SAAU,GACVxD,KAAMgD,GAEJS,EAAM,aAAehH,EAAMc,WAAa,eACxCqB,EAAU,IAAIC,QAClBD,EAAQE,IAAI,mBAAoB,kBAChCF,EAAQE,IAAI,eAAgB,oBAC5BF,EAAQE,IACN,gBACA,SACEC,KACEC,eAAeC,QAAQ,YACrB,IACAD,eAAeC,QAAQ,cAG/BC,MAAMuE,EAAK,CACTtE,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,UACAW,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU2D,KAEpB1D,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAI2D,SAGb9D,MAAK,SAACI,GACLvD,EAAMd,YAAY,CAChBG,SAAU,CACRmE,QAASD,EAAKH,SACdK,MAAM,KAGV/B,GAAW,GACXE,GAAS,GACT5B,EAAMkH,6BAEPtD,OAAM,WACL5D,EAAMd,YAAY,CAChBG,SAAU,CACRmE,QAAS,mBACTC,MAAM,EACNI,SAAU,WAGdnC,GAAW,GACXE,GAAS,MAgBXuF,CAAOlB,EAAOM,SAEhBN,EAAOmB,WAAWpB,EAAM,MAE1B,OACE,mCACE,cAACpB,EAAA,EAAD,CAAMC,WAAS,EAAC/E,QAAS,EAAGgF,QAAQ,SAASC,MAAO,CAAEC,QAAS,QAA/D,SACE,cAAC,KAAD,CACEe,YAAa,SAACC,GAAD,OAAgBD,EAAYC,IACzCqB,UAAW,OAFb,SAIE,cAAC1B,EAAA,EAAD,CACEE,QAAQ,YACRD,MAAM,UACNP,SAAU5D,EACVsD,MAAO,CAAEuC,aAAc,QAJzB,SAMG7F,EACC,cAACqE,GAAA,EAAD,CAAkBF,MAAM,YAAYrF,KAAM,KAE1C,yBCpBd,IAGec,gBAHS,SAACC,GACvB,OAAO,eAAKA,EAAMjC,YAEoB,CAAEH,eAA3BmC,EA/Ef,WACE,MAAoCE,IAAMC,SAAS,GAAnD,mBAAO+F,EAAP,KAAmBC,EAAnB,KACA,EAAoCjG,IAAMC,SAAS,IAAnD,mBAAOV,EAAP,KAAmB2G,EAAnB,KACA,EAAwClG,IAAMC,SAAc,IAA5D,mBAAOX,EAAP,KAAqB6G,EAArB,KACMC,EAPC,CAAC,uBAAwB,cAAe,cAQzCjE,EAAiC,SACrC5C,EACAD,GAEA4G,EAAc3G,GACd4G,EAAgB7G,GAChB+G,KAEIV,EAA0B,WAC9BU,KAGIA,EAAa,WACjBJ,GAAc,SAACK,GAAD,OAAoBA,EAAiB,MAkCrD,OACE,cAACC,EAAA,EAAD,UACE,eAACzH,EAAA,EAAD,CAAO0E,MAAO,CAAEC,QAAS,QAAzB,UACE,cAAC+C,EAAA,EAAD,CAASR,WAAYA,EAAYS,kBAAgB,EAAjD,SACGL,EAAMM,KAAI,SAACzC,GAAD,OACT,cAAC0C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAY3C,KADHA,QAKf,mCACG+B,IAAeI,EAAMlB,OACpB,gCACE,cAAC2B,EAAA,EAAD,kCACA,cAACzC,EAAA,EAAD,CAAQ0C,QA7CA,WAClBb,EAAc,IA4CJ,sBAGF,mCA5CU,SAACc,GACnB,OAAQA,GACN,KAAK,EACH,OACE,cAAC,GAAD,CACE5E,+BAAgCA,IAGtC,KAAK,EACH,OACE,cAAC,GAAD,CACE5C,WAAYA,EACZoG,wBAAyBA,IAG/B,KAAK,EACH,OACE,cAACnH,GAAD,CACEe,WAAYA,EACZD,aAAcA,IAGpB,QACE,MAAO,qBAqBA0H,CAAYhB,e,kHChB3B,IAAMiB,GAAwB,CAC5B,CACEC,GAAI,cACJjD,MAAO,cACPkD,MAAO,QAET,CACED,GAAI,gBACJjD,MAAO,gBACPkD,MAAO,UAET,CAAED,GAAI,UAAWjD,MAAO,UAAWkD,MAAO,UAC1C,CACED,GAAI,gBACJjD,MAAO,gBACPkD,MAAO,UAET,CAAED,GAAI,SAAUjD,MAAO,SAAUkD,MAAO,UACxC,CACED,GAAI,aACJjD,MAAO,aACPkD,MAAO,UAET,CACED,GAAI,aACJjD,MAAO,aACPkD,MAAO,UAET,CACED,GAAI,aACJjD,MAAO,aACPkD,MAAO,WASX,SAASC,GAAkB3I,GACkBA,EAAnCC,QAAmCD,EAA1B4I,YAA0B5I,EAAb6I,SAE9B,OACE,cAACC,GAAA,EAAD,UACE,eAACpI,EAAA,EAAD,WACG8H,GAAUP,KAAI,SAACc,GAAD,OACb,cAACpI,EAAA,EAAD,CAEE+H,MAAOK,EAASL,MAChB3D,MAAO,CAAEiE,WAAY,QAHvB,SAKGD,EAASvD,OAJLuD,EAASN,OAOlB,cAAC9H,EAAA,EAAD,CAAW+H,MAAM,SAAS3D,MAAO,CAAEiE,WAAY,QAA/C,0BAQR,IA6BKC,GA7BC3J,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJwJ,MAAO,QAETC,MAAO,CACLD,MAAO,OACP5B,aAAc9H,EAAMM,QAAQ,IAE9BsJ,MAAO,CACLC,SAAU,KAEZC,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACNC,OAAQ,EACR5J,QAAS,EACT6J,SAAU,SACV1E,QAAS,EACT2E,SAAU,WACVC,IAAK,GACLV,MAAO,GAETW,SAAU,CACRC,OAAQtK,EAAMsK,OAAOC,OAAS,EAC9BnE,MAAO,c,SAIRqD,K,gBAAAA,E,cAAAA,E,cAAAA,E,aAAAA,Q,KAgML,IAGe5H,gBAHc,SAACC,GAC5B,OAAO,eAAKA,EAAMjC,YAEoB,CAAEH,eAA3BmC,EA7Lf,SAAsBrB,GACpB,IAAMC,EAAUX,KAChB,EAAgCiC,IAAMC,SAAmB,IAAzD,mBAAOwI,EAAP,KACA,GADA,KACwBzI,IAAMC,SAAS,IAAvC,mBAAOyI,EAAP,KAAaC,EAAb,KACA,EAA8B3I,IAAMC,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAsCH,IAAMC,SAAS,GAArD,mBAAO2I,EAAP,KAAoBC,EAApB,KACA,EAAwB7I,IAAMC,SAAc,IAA5C,mBAAO+B,EAAP,KAAa8G,EAAb,KACAC,qBAAU,WACR,IACInI,EAAU,IAAIC,QAClBD,EAAQE,IAAI,mBAAoB,kBAChCF,EAAQE,IAAI,eAAgB,oBAC5BF,EAAQE,IACN,gBACA,SACEC,KACEC,eAAeC,QAAQ,YACrB,IACAD,eAAeC,QAAQ,cAG/BC,MAbU,mBAaC,CACTC,OAAQ,MACRP,QAASA,IAERgB,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAI2D,SAGb9D,MAAK,SAACI,GACL8G,EAAQ9G,GACR7B,GAAW,MAEZkC,OAAM,WACLlC,GAAW,GACX2I,EAAQ,SAEX,IACH,IAAME,EAAU,SAACA,EAAkBzJ,GACjCY,GAAW,GACX,IAAIsF,EAAG,oBAAgBlG,EAAhB,YAA8ByJ,GACjCpI,EAAU,IAAIC,QAClBD,EAAQE,IAAI,mBAAoB,kBAChCF,EAAQE,IAAI,eAAgB,oBAC5BF,EAAQE,IACN,gBACA,SACEC,KACEC,eAAeC,QAAQ,YACrB,IACAD,eAAeC,QAAQ,cAG/BC,MAAMuE,EAAK,CACTtE,OAAQ,MACRP,QAASA,IAERgB,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAI2D,SAGb9D,MAAK,SAACI,GACL7B,GAAW,GACX1B,EAAMd,YAAY,CAChBG,SAAU,CAAEmE,QAASD,EAAKH,SAAUK,MAAM,QAG7CG,OAAM,WACLlC,GAAW,GACX1B,EAAMd,YAAY,CAChBG,SAAU,CACRmE,QAAS,gCACTC,MAAM,EACNI,SAAU,eAmBd2G,EACJL,EAAcM,KAAKC,IAAIP,EAAa5G,EAAKkD,OAASwD,EAAOE,GAE3D,OACE,sBAAKjK,UAAWD,EAAQP,KAAxB,UACE,cAACiL,GAAA,EAAD,CAAUzK,UAAWD,EAAQ4J,SAAUpG,KAAMhC,EAA7C,SACE,cAACqE,GAAA,EAAD,CAAkBF,MAAM,cAE1B,eAACvF,EAAA,EAAD,CAAOH,UAAWD,EAAQkJ,MAA1B,UACE,cAAChJ,EAAA,EAAD,UACE,eAACG,EAAA,EAAD,CACEJ,UAAWD,EAAQmJ,MACnBwB,kBAAgB,aAChBrK,KAAM,SACNC,aAAW,iBAJb,UAME,cAACmI,GAAD,CACE1I,QAASA,EACT2I,YAAaoB,EAASvD,OACtBoC,SAAUtF,EAAKkD,SAEjB,eAAChG,EAAA,EAAD,WACG8C,EAAK0E,KAAI,SAAC4C,EAAUC,GACnB,IAzBMrF,EAyBAsF,GAzBAtF,EAyB4BoF,EAAIpF,MAzBa,IAA5BuE,EAASgB,QAAQvF,IA0BlCwF,EAAO,kCAA8BH,GAE3C,OACE,eAACpK,EAAA,EAAD,CACEwK,KAAK,WACLC,eAAcJ,EACdK,UAAW,EAEXpB,SAAUe,EALZ,UAOE,cAACpK,EAAA,EAAD,CAAWP,UAAU,KAAKqI,GAAIwC,EAASrK,MAAM,MAA7C,SACGiK,EAAIlH,cAEP,cAAChD,EAAA,EAAD,CAAWP,UAAU,KAAKqI,GAAIwC,EAASrK,MAAM,MAA7C,SACGiK,EAAIQ,gBAEP,cAAC1K,EAAA,EAAD,CAAW+H,MAAM,SAAjB,SAA2BmC,EAAIS,UAC/B,cAAC3K,EAAA,EAAD,CAAW+H,MAAM,SAAjB,SAA2BmC,EAAIU,gBAC/B,cAAC5K,EAAA,EAAD,CAAW+H,MAAM,SAAjB,SAA2BmC,EAAIW,SAC/B,cAAC7K,EAAA,EAAD,CAAW+H,MAAM,SAAjB,SAA2BmC,EAAIY,aAC/B,cAAC9K,EAAA,EAAD,CAAW+H,MAAM,SAAjB,SAA2BmC,EAAIa,aAC/B,cAAC/K,EAAA,EAAD,CAAW+H,MAAM,SAAjB,SAA2BmC,EAAIc,aAC/B,eAAChL,EAAA,EAAD,CAAW+H,MAAM,SAAjB,UACE,cAACkD,EAAA,EAAD,CACEvD,QAAS,kBAAMkC,EAAQtB,GAAQ4C,MAAOhB,EAAIlH,cAD5C,SAGE,cAAC,KAAD,MAEF,cAACiI,EAAA,EAAD,CACEvD,QAAS,kBAAMkC,EAAQtB,GAAQ6C,KAAMjB,EAAIlH,cAD3C,SAGE,cAAC,KAAD,MAEF,cAACiI,EAAA,EAAD,CACEvD,QAAS,kBAAMkC,EAAQtB,GAAQ8C,MAAOlB,EAAIlH,cAD5C,SAGE,cAAC,KAAD,WA7BCkH,EAAIlH,gBAmCd6G,EAAY,GACX,cAAC9J,EAAA,EAAD,CAAUqE,MAAO,CAAE0E,OAAQ,GAAKe,GAAhC,SACE,cAAC7J,EAAA,EAAD,CAAWqL,QAAS,cAM9B,cAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5B9L,UAAU,MACV+L,MAAO5I,EAAKkD,OACZ0D,YAAaA,EACbF,KAAMA,EACNmC,aA7FiB,SAACC,EAAgBC,GACxCpC,EAAQoC,IA6FFC,oBA1FwB,SAC9BF,GAEAjC,EAAeoC,SAASH,EAAMI,OAAOlH,MAAO,KAC5C2E,EAAQ,eC/OGwC,GAjBS,CACtB,CACEC,KAAM,yBACNlH,KAAM,kBACNmH,KAAM,cAAC,IAAD,IACNxM,UAAW,cAAC,GAAD,IACXyM,OAAQ,0BAEV,CACEF,KAAM,gBACNlH,KAAM,gBACNmH,KAAM,cAAC,KAAD,IACNxM,UAAW,cAAC,GAAD,IACXyM,OAAQ,kBCWNC,GAAc,IAEdxN,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,QAEXoN,KAAM,CACJC,SAAU,GAEZC,eAAe,aACbtN,QAAS,QACRH,EAAM0N,YAAYC,GAAG,MAAQ,CAC5BxN,QAAS,SAGbyN,OAAQ,CACNtD,OAAQtK,EAAMsK,OAAOC,OAAS,EAC9BsD,WAAY7N,EAAM8N,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhO,EAAM8N,YAAYE,OAAOC,MACjCC,SAAUlO,EAAM8N,YAAYI,SAASC,iBAGzCC,cAAc,aACZjO,QAAS,QACRH,EAAM0N,YAAYC,GAAG,MAAQ,CAC5BxN,QAAS,SAGbkO,YAAa,CACXC,WAAYhB,GACZ5D,MAAM,eAAD,OAAiB4D,GAAjB,OACLO,WAAY7N,EAAM8N,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhO,EAAM8N,YAAYE,OAAOC,MACjCC,SAAUlO,EAAM8N,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJvO,QAAS,QAEXoK,OAAQ,CACNb,MAAO4D,GACPqB,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVnF,MAAO4D,GACPO,WAAY7N,EAAM8N,YAAYC,OAAO,QAAS,CAC5CC,OAAQhO,EAAM8N,YAAYE,OAAOC,MACjCC,SAAUlO,EAAM8N,YAAYI,SAASK,kBAGzCO,YAAY,aACVjB,WAAY7N,EAAM8N,YAAYC,OAAO,QAAS,CAC5CC,OAAQhO,EAAM8N,YAAYE,OAAOC,MACjCC,SAAUlO,EAAM8N,YAAYI,SAASC,gBAEvCY,UAAW,SACXrF,MAAO1J,EAAMM,QAAQ,GAAK,GACzBN,EAAM0N,YAAYC,GAAG,MAAQ,CAC5BjE,MAAO1J,EAAMM,QAAQ,GAAK,IAG9B0O,QAAQ,aACN7O,QAAS,OACT8O,WAAY,SACZC,eAAgB,WAChB1J,QAASxF,EAAMM,QAAQ,EAAG,IAEvBN,EAAMmP,OAAOH,SAElBrP,QAAS,CACP6N,SAAU,EACVhI,QAASxF,EAAMM,QAAQ,IAEzB8O,KAAM,CACJ1F,MAAO,KAET2F,SAAU,CACR3F,MAAO,aAiIb,IAIe7H,gBAJS,SAACC,GACvB,MAAO,CAAEwN,QAASxN,EAAMyN,MAAMD,QAAStP,MAAO8B,EAAM9B,MAAMA,SAGpB,CAAEwP,QPnPnB,SAAC7P,GACtB,MAAO,CACLC,KAAML,EACN+P,QAAS3P,EAAQ2P,UOgP8B5P,cAAa+P,SPvOxC,SAAC9P,GACvB,MAAO,CACLC,KAAMH,EACNO,MAAOL,KOoOIkC,EAhIf,SAAoBrB,GAAa,IAAD,IACxBC,EAAUX,KACV4P,EAAUC,cACV3P,EAAQ4P,cACd,EAAwB7N,IAAMC,UAAS,GAAvC,mBAAOiC,EAAP,KAAa4L,EAAb,KACA,EAA0B9N,IAAMC,SAAS,CACvC8N,MAAM,IADR,mBAIA,GAJA,UAOI/N,IAAMC,SAA6B,OAHvC,mBA2BA,OA3BA,UA4BE,sBAAKtB,UAAWD,EAAQP,KAAxB,UACE,cAAC6P,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACE7F,SAAS,QACTzJ,UAAWuP,YAAKxP,EAAQmN,OAAT,eACZnN,EAAQ4N,YAAcpK,IAH3B,SAME,eAACiM,EAAA,EAAD,WACE,cAAC9D,EAAA,EAAD,CACEhG,MAAM,UACNpF,aAAW,cACX6H,QAnCe,WACvBgH,GAAQ,IAmCAM,KAAK,QACLzP,UAAWuP,YAAKxP,EAAQ+N,WAAT,eACZ/N,EAAQiO,KAAOzK,IANpB,SASE,cAAC,IAAD,MAEF,cAAC2E,EAAA,EAAD,CAAYvC,QAAQ,KAAK+J,QAAM,EAA/B,wBAGA,qBAAK1P,UAAWD,EAAQ8M,OACxB,cAACpH,EAAA,EAAD,CAAQE,QAAQ,YAAYD,MAAM,YAAYyC,QAhCvC,WACb9F,eAAesN,WAAW,SAC1BtN,eAAesN,WAAW,YAC1BtN,eAAesN,WAAW,YAC1BC,OAAOC,SAASC,UA4BV,yBAKJ,eAACC,EAAA,EAAD,CACEpK,QAAQ,YACR3F,UAAWuP,YAAKxP,EAAQ8J,QAAT,mBACZ9J,EAAQoO,WAAa5K,GADT,cAEZxD,EAAQqO,aAAe7K,GAFX,IAIfxD,QAAS,CACPkJ,MAAOsG,aAAI,mBACRxP,EAAQoO,WAAa5K,GADb,cAERxD,EAAQqO,aAAe7K,GAFf,KAPf,UAaE,qBAAKvD,UAAWD,EAAQuO,QAAxB,SACE,cAAC5C,EAAA,EAAD,CAAYvD,QA1DM,WACxBgH,GAAQ,IAyDF,SACuB,QAApB7P,EAAM0Q,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,QAIN,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACG1D,GAAgBzE,KAAI,SAACoI,EAAYvF,GAAb,OACnB,eAACwF,EAAA,EAAD,CAEEC,QAAM,EACNnQ,UAAU,IACViI,QAAS,WA7EH,IAACmI,IA8EKH,EAAM1D,KA7E5BuC,EAAQvI,KAAK6J,GACbnB,GAAQ,IAuEA,UAQE,cAACoB,EAAA,EAAD,UAAeJ,EAAMzD,OACrB,cAAC8D,EAAA,EAAD,CAAcC,QAASN,EAAM5K,SARxB4K,EAAM5K,cAanB,uBAAMvF,UAAWD,EAAQd,QAAzB,UACE,qBAAKe,UAAWD,EAAQuO,UACxB,cAAC5J,EAAA,EAAD,CAAMK,MAAI,IACV,eAAC,IAAD,WACGyH,GAAgBzE,KAAI,SAACoI,GACpB,OACE,cAAC,IAAD,CAAO1D,KAAM0D,EAAM1D,KAAnB,SACG0D,EAAMjQ,WADqBiQ,EAAM1D,SAKxC,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,kB,oBClOZ,SAASiE,GAAM5Q,GACb,OAAO,cAAC,KAAD,aAAU6Q,UAAW,EAAGhL,QAAQ,UAAa7F,IAGtD,IAAMV,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CE,KAAM,CACJwJ,MAAO,OACP,YAAa,CACX4H,UAAWtR,EAAMM,QAAQ,SAqC/B,IAGeuB,gBAHS,SAACC,GACvB,OAAO,eAAKA,EAAMjC,YAEoB,CAAEH,eAA3BmC,EAnCf,SAAwBrB,GAAa,IAAD,IAC5BC,EAAUX,KAIVyR,EAAc,SAAC1E,EAA8B2E,GAClC,cAAXA,GAGJhR,EAAMd,YAAY,CAAEG,SAAU,CAAEmE,QAAS,GAAIC,MAAM,MAErD,OACE,qBAAKvD,UAAWD,EAAQP,KAAxB,SACE,cAACuR,GAAA,EAAD,CACExN,KAAMzD,EAAMX,SAASoE,MAAmC,KAA3BzD,EAAMX,SAASmE,QAC5CoC,MAAM,GACNsL,iBAAkB,IAClBC,QAASJ,EACTK,aAAc,CAAEC,SAAU,SAAUC,WAAY,SALlD,SAOE,cAAC,GAAD,CACEH,QAASJ,EACTlN,UACE,UAAA7D,EAAMX,gBAAN,eAAgBwE,UAAhB,UAA2B7D,EAAMX,gBAAjC,aAA2B,EAAgBwE,SAAW,UAH1D,SAMG7D,EAAMX,SAASmE,iB,iHC3BpBlE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJsN,SAAU,EACV8D,UAAW,QACXnR,QAAS,OACT4R,SAAU,QAEZ1R,OAAQ,CACNA,OAAQL,EAAMM,QAAQ,IAExB0R,aAAc,CACZV,UAAWtR,EAAMM,QAAQ,IAE3B2R,UAAW,CACTvI,MAAO,QAETC,MAAO,CACLnE,QAASxF,EAAMM,QAAQ,GACvBqF,UAAW,SACXS,MAAOpG,EAAMkS,QAAQC,KAAKC,gBAUzB,SAASC,KACd,IAAM5R,EAAUX,KAChB,EAA8BiC,IAAMC,UAAc,GAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,IAAMC,UAAc,GAA9C,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAA4BL,IAAMC,SAAgB,CAChDsQ,SAAU,GACVC,SAAU,GACVC,cAAc,IAHhB,mBAAO9P,EAAP,KAAe+P,EAAf,KAMM9N,EAAe,SAAC+N,GAAD,OAAuB,SAC1C7F,GAEA4F,EAAU,2BAAK/P,GAAN,kBAAegQ,EAAO7F,EAAMI,OAAOlH,WAGxC4M,EAA0B,WAC9BF,EAAU,2BAAK/P,GAAN,IAAc8P,cAAe9P,EAAO8P,iBAmC/C,OACE,qBAAK9R,UAAWD,EAAQP,KAAxB,SACE,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAAC/E,QAAS,EAAGgF,QAAQ,SAApC,SACE,cAACF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGkN,GAAI,EAAtB,SACE,eAAC/R,EAAA,EAAD,CAAOH,UAAWD,EAAQkJ,MAAO0H,UAAW,EAA5C,UACE,eAACwB,GAAA,EAAD,CACEnS,UAAWuP,YAAKxP,EAAQJ,OAAQI,EAAQwR,WACxC9P,MAAOA,EAFT,UAIE,cAAC2Q,GAAA,EAAD,CAAYC,QAAQ,8BAApB,sBAGA,cAACC,GAAA,EAAD,CACE/J,GAAG,8BACHrJ,KAAM,OACNmG,MAAOrD,EAAO4P,SACdxM,SAAUnB,EAAa,YACvBkB,SAAU5D,EACVgR,aACE,cAACC,GAAA,EAAD,CAAgB/I,SAAS,MAAzB,SACE,cAACiC,EAAA,EAAD,CACEhG,MAAOjE,EAAQ,YAAc,UAC7BnB,aAAW,6BACX6H,QAAS8J,EACTpN,MAAO,CAAEC,QAAS,KAJpB,SAME,cAAC,KAAD,aAMV,eAACqN,GAAA,EAAD,CACEnS,UAAWuP,YAAKxP,EAAQJ,OAAQI,EAAQwR,WACxC9P,MAAOA,EAFT,UAIE,cAAC2Q,GAAA,EAAD,CAAYC,QAAQ,8BAApB,sBAGA,cAACC,GAAA,EAAD,CACE/J,GAAG,8BACHrJ,KAAM8C,EAAO8P,aAAe,OAAS,WACrCzM,MAAOrD,EAAO6P,SACdzM,SAAUnB,EAAa,YACvBkB,SAAU5D,EACVgR,aACE,cAACC,GAAA,EAAD,CAAgB/I,SAAS,MAAzB,SACE,cAACiC,EAAA,EAAD,CACEhG,MAAOjE,EAAQ,YAAc,UAC7BnB,aAAW,6BACX6H,QAAS8J,EACTpN,MAAO,CAAEC,QAAS,KAJpB,SAMG9C,EAAO8P,aACN,cAAC,KAAD,CAAY3J,QAAS8J,IAErB,cAAC,KAAD,CAAe9J,QAAS8J,UAMjCxQ,GACC,cAACgR,GAAA,EAAD,CAAgBlK,GAAG,iBAAnB,+CAKJ,cAAC4J,GAAA,EAAD,CAAanS,UAAWuP,YAAKxP,EAAQJ,OAAQI,EAAQwR,WAArD,SACE,cAAC9L,EAAA,EAAD,CACEE,QAAQ,YACRD,MAAM,UACNyC,QApGE,WACd3G,GAAW,GACX,IACIS,EAAU,IAAIC,QAClBD,EAAQE,IAAI,mBAAoB,kBAChCF,EAAQE,IAAI,eAAgB,oBAE5BF,EAAQE,IACN,gBACA,SAAWC,KAAKJ,EAAO4P,SAAW,IAAM5P,EAAO6P,WAGjDtP,MAVU,cAUC,CACTC,OAAQ,MACRP,QAASA,IAERgB,MAAK,SAACC,GAAD,OAAcA,EAASE,UAC5BH,MAAK,SAACI,GACLhB,eAAeqQ,QAAQ,QAASrP,EAAKsP,OACrCtQ,eAAeqQ,QAAQ,WAAY1Q,EAAO4P,UAC1CvP,eAAeqQ,QAAQ,WAAY1Q,EAAO6P,UAC1CjC,OAAOC,SAASC,YAEjBpM,OAAM,WACLlC,GAAW,GACXE,GAAS,OA4EDyD,SAAU5D,EAJZ,SAMGA,EACC,cAACqE,GAAA,EAAD,CAAkBF,MAAM,YAAYrF,KAAM,KAE1C,qB,aClLZuS,GAAe,CACnBhE,QAAS,MCDLgE,GAAe,CACnBzT,SAAU,CAAEmE,QAAS,GAAIC,MAAM,ICD3BqP,GAAe,CACnBtT,MAAO,CAAEmD,KAAM,UCCFoQ,gBAAgB,CAAEhE,MHElB,WAA8C,IAApCzN,EAAmC,uDAA3BwR,GAAcE,EAAa,uCAC1D,OAAQA,EAAO5T,MACb,KAAKL,EACH,OAAOkU,OAAOC,OAAO,GAAI5R,EAAO,CAC9BwN,QAASkE,EAAOlE,UAEpB,QACE,OAAOxN,IGT2BjC,SFEzB,WAA8C,IAApCiC,EAAmC,uDAA3BwR,GAAcE,EAAa,uCAC1D,OAAQA,EAAO5T,MACb,KAAKJ,EACH,OAAOiU,OAAOC,OAAO,GAAI5R,EAAO,CAC9BjC,SAAU2T,EAAO3T,WAErB,QACE,OAAOiC,IETqC9B,MDEnC,WAA8C,IAApC8B,EAAmC,uDAA3BwR,GAAcE,EAAa,uCAC1D,OAAQA,EAAO5T,MACb,KAAKH,EACH,OAAOgU,OAAOC,OAAO,GAAI5R,EAAO,CAC9B9B,MAAOwT,EAAOxT,QAElB,QACE,OAAO8B,MEVE6R,gBAAYC,IC6BZC,OAvBf,WACE,MAA0B9R,IAAMC,SAC9Be,eAAeC,QAAQ,SAAWD,eAAeC,QAAQ,SAAW,IADtE,mBAAOqQ,EAAP,KAMA,OANA,KAOE,cAAC,IAAD,CAAUS,MAAOA,GAAjB,SACE,cAAC,IAAD,UACa,KAAVT,EACC,cAAChB,GAAD,IAEA,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,YCVG0B,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtQ,MAAK,YAAkD,IAA/CuQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDX,O","file":"static/js/main.6f124e0c.chunk.js","sourcesContent":["export const USER_LOGIN = \"USER_LOGIN\";\r\nexport const SNACKBAR = \"SNACKBAR\";\r\nexport const THEME = \"THEME\";\r\nexport const CAMPAIGN = \"CAMPAIGN\";\r\n","import { USER_LOGIN, SNACKBAR, THEME, CAMPAIGN } from \"./actionTypes\";\r\nexport const setUser = (content: any) => {\r\n  return {\r\n    type: USER_LOGIN,\r\n    profile: content.profile,\r\n  };\r\n};\r\nexport const setSnackBar = (content: any) => {\r\n  return {\r\n    type: SNACKBAR,\r\n    snackbar: content.snackbar,\r\n  };\r\n};\r\nexport const setTheme = (content: any) => {\r\n  return {\r\n    type: THEME,\r\n    theme: content,\r\n  };\r\n};\r\nexport const setCampaignId = (content: any) => {\r\n  return {\r\n    type: CAMPAIGN,\r\n    campaignId: content,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function CampaignCreationSuccess(props: any) {\r\n  const classes = useStyles();\r\n  debugger;\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Campign Id\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.campaignID}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Campign Name\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.campaignName}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Target Env\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.targetEnv}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Client ID\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.clientID}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Contact Flow ID\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.contactFlowID}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Primary Queue\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.primaryQueue}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Wait Queue\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {props.campaignData?.waitQueue}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, CircularProgress, Grid, TextField } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { setSnackBar } from \"../../redux/actions\";\r\nfunction CreateNewCampaignForm(props: any) {\r\n  const [loading, setLoading] = React.useState<any>(false);\r\n  const [error, setError] = React.useState<any>(false);\r\n  const FormSchema = Yup.object().shape({\r\n    campaignName: Yup.string().required(\"Required\"),\r\n    targetEnv: Yup.string().required(\"Required\"),\r\n    clientID: Yup.string().required(\"Required\"),\r\n  });\r\n  const submitForm = (values: any) => {\r\n    createNewCampaign(values);\r\n  };\r\n  const createNewCampaign = (values: any) => {\r\n    setLoading(true);\r\n    let url = \"/campaign/create\";\r\n    let headers = new Headers();\r\n    headers.set(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n    headers.set(\r\n      \"Authorization\",\r\n      \"Basic \" +\r\n        btoa(\r\n          sessionStorage.getItem(\"username\") +\r\n            \":\" +\r\n            sessionStorage.getItem(\"password\")\r\n        )\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: headers,\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response: any) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw error();\r\n        }\r\n      })\r\n      .then((data: any) => {\r\n        setLoading(false);\r\n        props.setSnackBar({\r\n          snackbar: { message: \"Campaign Creation Successful\", open: true },\r\n        });\r\n        props.handleCreateNewCampaignSuccess(\r\n          data?.response?.campaign_id,\r\n          values\r\n        );\r\n      })\r\n      .catch(() => {\r\n        props.setSnackBar({\r\n          snackbar: {\r\n            message: \"Operation failed!\",\r\n            open: true,\r\n            severity: \"error\",\r\n          },\r\n        });\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        validationSchema={FormSchema}\r\n        initialValues={{\r\n          campaignName: \"Test Campaign\",\r\n          targetEnv: \"aws\",\r\n          clientID: \"leadgen\",\r\n          contactFlowID: \"\",\r\n          primaryQueue: \"\",\r\n          waitQueue: \"\",\r\n        }}\r\n        onSubmit={(values) => submitForm(values)}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values,\r\n          setFieldValue,\r\n          submitCount,\r\n          isValid,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Grid container justify=\"center\" style={{ padding: \"20px\" }}>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                <TextField\r\n                  disabled={loading}\r\n                  onChange={handleChange}\r\n                  value={values.campaignName}\r\n                  label=\"Campaign Name\"\r\n                  name=\"campaignName\"\r\n                  error={Boolean(touched.campaignName && errors.campaignName)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                <TextField\r\n                  disabled={loading}\r\n                  onChange={handleChange}\r\n                  value={values.targetEnv}\r\n                  label=\"Target Env\"\r\n                  name=\"targetEnv\"\r\n                  error={Boolean(touched.targetEnv && errors.targetEnv)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                <TextField\r\n                  disabled={loading}\r\n                  onChange={handleChange}\r\n                  value={values.clientID}\r\n                  label=\"Client ID\"\r\n                  name=\"clientID\"\r\n                  error={Boolean(touched.clientID && errors.clientID)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                <TextField\r\n                  disabled={loading}\r\n                  onChange={handleChange}\r\n                  value={values.contactFlowID}\r\n                  label=\"Contact Flow ID\"\r\n                  name=\"contactFlowID\"\r\n                  error={Boolean(touched.contactFlowID && errors.contactFlowID)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                <TextField\r\n                  disabled={loading}\r\n                  onChange={handleChange}\r\n                  value={values.primaryQueue}\r\n                  label=\"Primary Queue\"\r\n                  name=\"primaryQueue\"\r\n                  error={Boolean(touched.primaryQueue && errors.primaryQueue)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                <TextField\r\n                  disabled={loading}\r\n                  onChange={handleChange}\r\n                  value={values.waitQueue}\r\n                  label=\"Wait Queue\"\r\n                  name=\"waitQueue\"\r\n                  error={Boolean(touched.waitQueue && errors.waitQueue)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"center\">\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={!isValid || loading}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                {loading ? (\r\n                  <CircularProgress color=\"secondary\" size={24} />\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </Button>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps: any = (state: any) => {\r\n  return { ...state.snackbar };\r\n};\r\nexport default connect(mapStateToProps, { setSnackBar })(CreateNewCampaignForm);\r\n","import { Button, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport React from \"react\";\r\nimport ReactFileReader from \"react-file-reader\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSnackBar } from \"../../redux/actions\";\r\n\r\nfunction ListUpload(props: any) {\r\n  const [loading, setLoading] = React.useState<any>(false);\r\n  const [error, setError] = React.useState<any>(false);\r\n\r\n  const submit = (data: any) => {\r\n    setLoading(true);\r\n    let lines: any = data.split(\"\\n\");\r\n    let result: any = [];\r\n    var csvHeaders: any = lines[0].split(\",\");\r\n    for (var i = 1; i < lines.length; i++) {\r\n      var obj: any = {};\r\n      var currentline = lines[i].split(\",\");\r\n      result.push({ name: currentline[0], phone_number: currentline[1] });\r\n    }\r\n    const payload = {\r\n      multiplier: 1,\r\n      waitTime: 60,\r\n      data: result,\r\n    };\r\n    let url = \"/campaign/\" + props.campaignID + \"/list/upload\";\r\n    let headers = new Headers();\r\n    headers.set(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n    headers.set(\r\n      \"Authorization\",\r\n      \"Basic \" +\r\n        btoa(\r\n          sessionStorage.getItem(\"username\") +\r\n            \":\" +\r\n            sessionStorage.getItem(\"password\")\r\n        )\r\n    );\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers,\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        props.setSnackBar({\r\n          snackbar: {\r\n            message: data.response,\r\n            open: true,\r\n          },\r\n        });\r\n        setLoading(false);\r\n        setError(false);\r\n        props.handleFileUploadSuccess()\r\n      })\r\n      .catch(() => {\r\n        props.setSnackBar({\r\n          snackbar: {\r\n            message: \"Failed to Upload\",\r\n            open: true,\r\n            severity: \"error\",\r\n          },\r\n        });\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n  const handleFiles = (files: any) => {\r\n    if (files[0].size / 1024 / 1024 > 4) {\r\n      props.setSnackBar({\r\n        snackbar: {\r\n          message: \"File size greater than 4MB\",\r\n          open: true,\r\n          severity: \"error\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      submit(reader.result);\r\n    };\r\n    reader.readAsText(files[0]);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container spacing={3} justify=\"center\" style={{ padding: \"20px\" }}>\r\n        <ReactFileReader\r\n          handleFiles={(files: any) => handleFiles(files)}\r\n          fileTypes={\".csv\"}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n            style={{ marginBottom: \"10px\" }}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress color=\"secondary\" size={24} />\r\n            ) : (\r\n              \"Upload List\"\r\n            )}\r\n          </Button>\r\n        </ReactFileReader>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps: any = (state: any) => {\r\n  return { ...state.snackbar };\r\n};\r\nexport default connect(mapStateToProps, { setSnackBar })(ListUpload);\r\n","import { Container, Paper } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSnackBar } from \"../redux/actions\";\r\nimport CampaignCreationSuccess from \"./Forms/CampaignCreationSuccess\";\r\nimport CreateNewCampaignForm from \"./Forms/CreateNewCampaignForm\";\r\nimport ListUpload from \"./Forms/ListUpload\";\r\nfunction getSteps() {\r\n  return [\"Select Campaign Name\", \"List Upload\", \"Ad Summary\"];\r\n}\r\n\r\nfunction CreateCampaignStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [campaignID, setCampaignID] = React.useState(\"\");\r\n  const [campaignData, setCampaignData] = React.useState<any>(\"\");\r\n  const steps = getSteps();\r\n  const handleCreateNewCampaignSuccess = (\r\n    campaignID: any,\r\n    campaignData: any\r\n  ) => {\r\n    setCampaignID(campaignID);\r\n    setCampaignData(campaignData);\r\n    handleNext();\r\n  };\r\n  const handleFileUploadSuccess = () => {\r\n    handleNext();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const getStepForm = (stepIndex: any) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <CreateNewCampaignForm\r\n            handleCreateNewCampaignSuccess={handleCreateNewCampaignSuccess}\r\n          ></CreateNewCampaignForm>\r\n        );\r\n      case 1:\r\n        return (\r\n          <ListUpload\r\n            campaignID={campaignID}\r\n            handleFileUploadSuccess={handleFileUploadSuccess}\r\n          ></ListUpload>\r\n        );\r\n      case 2:\r\n        return (\r\n          <CampaignCreationSuccess\r\n            campaignID={campaignID}\r\n            campaignData={campaignData}\r\n          ></CampaignCreationSuccess>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Paper style={{ padding: \"10px\" }}>\r\n        <Stepper activeStep={activeStep} alternativeLabel>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <>\r\n          {activeStep === steps.length ? (\r\n            <div>\r\n              <Typography>All steps completed</Typography>\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </div>\r\n          ) : (\r\n            <>{getStepForm(activeStep)}</>\r\n          )}\r\n        </>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n  return { ...state.snackbar };\r\n};\r\nexport default connect(mapStateToProps, { setSnackBar })(CreateCampaignStepper);\r\n","import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { useEffect } from \"react\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport StopIcon from \"@material-ui/icons/Stop\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport { Backdrop, CircularProgress, IconButton } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSnackBar } from \"./../redux/actions\";\r\n\r\ninterface Data {\r\n  campaign_id: string;\r\n  campaign_name: string;\r\n  flow_id: string;\r\n  primary_queue: string;\r\n  status: string;\r\n  target_env: string;\r\n  updated_at: string;\r\n  wait_queue: string;\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = \"asc\" | \"desc\";\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string }\r\n) => number {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface HeadCell {\r\n  id: keyof Data;\r\n  label: string;\r\n  align: string;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  {\r\n    id: \"campaign_id\",\r\n    label: \"CAMPAIGN ID\",\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"campaign_name\",\r\n    label: \"CAMPAIGN NAME\",\r\n    align: \"center\",\r\n  },\r\n  { id: \"flow_id\", label: \"FLOW ID\", align: \"center\" },\r\n  {\r\n    id: \"primary_queue\",\r\n    label: \"PRIMARY QUEUE\",\r\n    align: \"center\",\r\n  },\r\n  { id: \"status\", label: \"STATUS\", align: \"center\" },\r\n  {\r\n    id: \"target_env\",\r\n    label: \"TARGET ENV\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"updated_at\",\r\n    label: \"UPDATED AT\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"wait_queue\",\r\n    label: \"WAIT QUEUE\",\r\n    align: \"center\",\r\n  },\r\n];\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  numSelected: number;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, numSelected, rowCount } = props;\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell: any) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align}\r\n            style={{ fontWeight: \"bold\" }}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n        <TableCell align=\"center\" style={{ fontWeight: \"bold\" }}>\r\n          Actions\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      width: \"100%\",\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: \"rect(0 0 0 0)\",\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: \"hidden\",\r\n      padding: 0,\r\n      position: \"absolute\",\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\nenum COMMAND {\r\n  STATUS = \"STATUS\",\r\n  START = \"START\",\r\n  PAUSE = \"PAUSE\",\r\n  STOP = \"STOP\",\r\n}\r\nfunction CampaignList(props: any) {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [data, setData] = React.useState<any>([]);\r\n  useEffect(() => {\r\n    let url = \"/campaign/getAll\";\r\n    let headers = new Headers();\r\n    headers.set(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n    headers.set(\r\n      \"Authorization\",\r\n      \"Basic \" +\r\n        btoa(\r\n          sessionStorage.getItem(\"username\") +\r\n            \":\" +\r\n            sessionStorage.getItem(\"password\")\r\n        )\r\n    );\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setData([]);\r\n      });\r\n  }, []);\r\n  const command = (command: COMMAND, campaignID: any) => {\r\n    setLoading(true);\r\n    let url = `/campaign/${campaignID}/${command}`;\r\n    let headers = new Headers();\r\n    headers.set(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n    headers.set(\r\n      \"Authorization\",\r\n      \"Basic \" +\r\n        btoa(\r\n          sessionStorage.getItem(\"username\") +\r\n            \":\" +\r\n            sessionStorage.getItem(\"password\")\r\n        )\r\n    );\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setLoading(false);\r\n        props.setSnackBar({\r\n          snackbar: { message: data.response, open: true },\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        props.setSnackBar({\r\n          snackbar: {\r\n            message: \"Error while performing action\",\r\n            open: true,\r\n            severity: \"error\",\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={\"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {data.map((row: any, index: any) => {\r\n                const isItemSelected = isSelected(row.name);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.campaign_id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                      {row.campaign_id}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                      {row.campaign_name}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.flow_id}</TableCell>\r\n                    <TableCell align=\"center\">{row.primary_queue}</TableCell>\r\n                    <TableCell align=\"center\">{row.status}</TableCell>\r\n                    <TableCell align=\"center\">{row.target_env}</TableCell>\r\n                    <TableCell align=\"center\">{row.updated_at}</TableCell>\r\n                    <TableCell align=\"center\">{row.wait_queue}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton\r\n                        onClick={() => command(COMMAND.START, row.campaign_id)}\r\n                      >\r\n                        <PlayArrowIcon></PlayArrowIcon>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        onClick={() => command(COMMAND.STOP, row.campaign_id)}\r\n                      >\r\n                        <StopIcon></StopIcon>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        onClick={() => command(COMMAND.PAUSE, row.campaign_id)}\r\n                      >\r\n                        <PauseIcon></PauseIcon>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={9} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps: any = (state: any) => {\r\n  return { ...state.snackbar };\r\n};\r\nexport default connect(mapStateToProps, { setSnackBar })(CampaignList);\r\n","import NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport React from \"react\";\r\nimport CreateCampaignStepper from \"./components/CreateCampaignStepper\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport CampaignList from \"./components/CampaignList\";\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/CreateCampaignStepper\",\r\n    name: \"Create Campaign\",\r\n    icon: <NoteAddIcon></NoteAddIcon>,\r\n    component: <CreateCampaignStepper></CreateCampaignStepper>,\r\n    layout: \"/CreateCampaignStepper\",\r\n  },\r\n  {\r\n    path: \"/CampaignList\",\r\n    name: \"Campaign List\",\r\n    icon: <FormatListBulletedIcon></FormatListBulletedIcon>,\r\n    component: <CampaignList></CampaignList>,\r\n    layout: \"/CampaignList\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { setSnackBar, setTheme, setUser } from \"../redux/actions\";\r\nimport dashboardRoutes from \"../routes\";\r\nimport CreateCampaignStepper from \"./CreateCampaignStepper\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"flex\",\r\n      },\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    sectionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: \"auto\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction MiniDrawer(props: any) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const [\r\n    mobileMoreAnchorEl,\r\n    setMobileMoreAnchorEl,\r\n  ] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const linkClick = (link: string) => {\r\n    history.push(link);\r\n    setOpen(false);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n  const logout = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"username\");\r\n    sessionStorage.removeItem(\"password\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Dialer App\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {dashboardRoutes.map((route: any, index: any) => (\r\n            <ListItem\r\n              key={route.name}\r\n              button\r\n              component=\"a\"\r\n              onClick={() => {\r\n                linkClick(route.path);\r\n              }}\r\n            >\r\n              <ListItemIcon>{route.icon}</ListItemIcon>\r\n              <ListItemText primary={route.name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Grid item>{/* <Navbar></Navbar> */}</Grid>\r\n        <Switch>\r\n          {dashboardRoutes.map((route: any) => {\r\n            return (\r\n              <Route path={route.path} key={route.path}>\r\n                {route.component}\r\n              </Route>\r\n            );\r\n          })}\r\n          <Route path=\"/\">\r\n            <CreateCampaignStepper></CreateCampaignStepper>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n  return { profile: state.login.profile, theme: state.theme.theme };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setUser, setSnackBar, setTheme })(\r\n  MiniDrawer\r\n);\r\n","import Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSnackBar } from \"../redux/actions\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction GlobalSnackBar(props: any) {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {};\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setSnackBar({ snackbar: { message: \"\", open: false } });\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        open={props.snackbar.open && props.snackbar.message !== \"\"}\r\n        color=\"\"\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={\r\n            props.snackbar?.severity ? props.snackbar?.severity : \"success\"\r\n          }\r\n        >\r\n          {props.snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n  return { ...state.snackbar };\r\n};\r\nexport default connect(mapStateToProps, { setSnackBar })(GlobalSnackBar);\r\n","import React from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: \"200px\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: \"25ch\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\ninterface State {\r\n  username: string;\r\n  password: string;\r\n  showPassword: boolean;\r\n}\r\n\r\nexport function LoginComponent() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState<any>(false);\r\n  const [error, setError] = React.useState<any>(false);\r\n\r\n  const [values, setValues] = React.useState<State>({\r\n    username: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop: keyof State) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  const handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n  const onClick = () => {\r\n    setLoading(true);\r\n    let url = \"/user/token\";\r\n    let headers = new Headers();\r\n    headers.set(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n    // headers.set(\"www-authenticate\", \"application/json\");\r\n    headers.set(\r\n      \"Authorization\",\r\n      \"Basic \" + btoa(values.username + \":\" + values.password)\r\n    );\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        sessionStorage.setItem(\"token\", data.token);\r\n        sessionStorage.setItem(\"username\", values.username);\r\n        sessionStorage.setItem(\"password\", values.password);\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={8} sm={3}>\r\n          <Paper className={classes.paper} elevation={4}>\r\n            <FormControl\r\n              className={clsx(classes.margin, classes.textField)}\r\n              error={error}\r\n            >\r\n              <InputLabel htmlFor=\"standard-adornment-UserName\">\r\n                UserName\r\n              </InputLabel>\r\n              <Input\r\n                id=\"standard-adornment-UserName\"\r\n                type={\"text\"}\r\n                value={values.username}\r\n                onChange={handleChange(\"username\")}\r\n                disabled={loading}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      color={error ? \"secondary\" : \"default\"}\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      style={{ padding: \"0\" }}\r\n                    >\r\n                      <AccountCircleIcon></AccountCircleIcon>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <FormControl\r\n              className={clsx(classes.margin, classes.textField)}\r\n              error={error}\r\n            >\r\n              <InputLabel htmlFor=\"standard-adornment-password\">\r\n                Password\r\n              </InputLabel>\r\n              <Input\r\n                id=\"standard-adornment-password\"\r\n                type={values.showPassword ? \"text\" : \"password\"}\r\n                value={values.password}\r\n                onChange={handleChange(\"password\")}\r\n                disabled={loading}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      color={error ? \"secondary\" : \"default\"}\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      style={{ padding: \"0\" }}\r\n                    >\r\n                      {values.showPassword ? (\r\n                        <Visibility onClick={handleClickShowPassword} />\r\n                      ) : (\r\n                        <VisibilityOff onClick={handleClickShowPassword} />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              {error && (\r\n                <FormHelperText id=\"my-helper-text\">\r\n                  Incorrect username or password\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n            <FormControl className={clsx(classes.margin, classes.textField)}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={onClick}\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <CircularProgress color=\"secondary\" size={24} />\r\n                ) : (\r\n                  \"Login\"\r\n                )}\r\n              </Button>\r\n            </FormControl>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { USER_LOGIN } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n};\r\n\r\nexport default function (state = initialState, action: any) {\r\n  switch (action.type) {\r\n    case USER_LOGIN:\r\n      return Object.assign({}, state, {\r\n        profile: action.profile,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SNACKBAR } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  snackbar: { message: \"\", open: false },\r\n};\r\n\r\nexport default function (state = initialState, action: any) {\r\n  switch (action.type) {\r\n    case SNACKBAR:\r\n      return Object.assign({}, state, {\r\n        snackbar: action.snackbar,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { THEME } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  theme: { mode: \"light\" },\r\n};\r\n\r\nexport default function (state = initialState, action: any) {\r\n  switch (action.type) {\r\n    case THEME:\r\n      return Object.assign({}, state, {\r\n        theme: action.theme,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport login from \"./login\";\r\nimport snackbar from \"./snackbar\";\r\nimport theme from \"./theme\";\r\nexport default combineReducers({ login, snackbar, theme });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import \"fontsource-roboto\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MiniDrawer from \"./components/MiniDrawer\";\r\nimport GlobalSnackBar from \"./components/SnackBar\";\r\nimport { LoginComponent } from \"./LoginComponent\";\r\nimport store from \"./redux/store\";\r\nfunction App() {\r\n  const [token, setToken] = React.useState<any>(\r\n    sessionStorage.getItem(\"token\") ? sessionStorage.getItem(\"token\") : \"\"\r\n  );\r\n\r\n  const login = () => {};\r\n  const logout = () => {};\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        {token === \"\" ? (\r\n          <LoginComponent></LoginComponent>\r\n        ) : (\r\n          <>\r\n            <MiniDrawer></MiniDrawer>\r\n            <GlobalSnackBar></GlobalSnackBar>\r\n          </>\r\n        )}\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}